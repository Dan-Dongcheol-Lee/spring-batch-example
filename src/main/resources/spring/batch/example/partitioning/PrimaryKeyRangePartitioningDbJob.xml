<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns:b="http://www.springframework.org/schema/beans"
    xmlns="http://www.springframework.org/schema/batch"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

    <b:bean class="spring.batch.example.configuration.BatchApplicationConfig"/>
    <b:bean class="spring.batch.example.configuration.BatchItemConfig"/>

    <job id="primaryKeyRangePartitioningDbJob" incrementer="jobParametersIncrementer">
        <step id="rownumRangeStep">
            <partition partitioner="personIdRangePartitioner" step="eachFileStep">
                <handler task-executor="asyncTaskExecutor" grid-size="2"/>
            </partition>
        </step>
        <listeners>
            <listener ref="elapsedTimeJobListener"/>
        </listeners>
    </job>

    <step id="eachFileStep">
        <tasklet>
            <chunk commit-interval="#{jobParameters['COMMIT_INTERVAL']}"
                reader="itemReader" processor="personItemProcessor" writer="itemWriter"/>
        </tasklet>
        <listeners>
            <listener ref="personItemProcessor"/>
        </listeners>
    </step>

    <b:bean id="personIdRangePartitioner" scope="step"
        class="spring.batch.example.partitioning.PrimaryKeyRangePartitioner">
        <b:constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
        <b:constructor-arg name="query">
            <b:value>
            <![CDATA[
             select rn, id from (
                select rownum as rn, id, count(id) over() cnt
                  from (select * from person order by id)
             ) where mod(rn, floor(cnt / ?)) = case when cnt >= ? then 0 else 1 end
            ]]>
            </b:value>
        </b:constructor-arg>
    </b:bean>

    <b:bean id="itemReader" scope="step"
            class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <b:property name="dataSource" ref="dataSource"/>
        <b:property name="sql">
            <b:value>
            <![CDATA[
             select * from (select * from person order by id)
              where 1 = 1
                #{stepExecutionContext['minId']}
                #{stepExecutionContext['maxId']}
            ]]>
            </b:value>
        </b:property>
        <b:property name="rowMapper" ref="personBeanPropertyRowMapper"/>
    </b:bean>

    <b:bean id="itemWriter" scope="step"
            class="org.springframework.batch.item.file.FlatFileItemWriter">
        <b:property name="resource"
            value="file:#{jobParameters['WRITE_PREFIX'] + '_' + stepExecutionContext['rn'] + '_output.txt'}"/>
        <b:property name="lineAggregator" ref="personLineAggregator"/>
    </b:bean>

    <!--
    <b:bean id="itemWriter" scope="step"
            class="org.springframework.batch.item.file.FlatFileItemWriter">
        <b:property name="resource"
                    value="file:#{jobParameters['WRITE_PREFIX'] + '_output.txt'}"/>
        <b:property name="lineAggregator" ref="personLineAggregator"/>
    </b:bean>
    -->

</b:beans>
